version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
    env_file:
      - ./backend/.env
    depends_on:
      - redis
    networks:
      - jagcode-network
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - jagcode-network
    restart: unless-stopped

  crypto-tracker:
    build:
      context: ./crypto-tracker
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    environment:
      - ENVIRONMENT=production
    env_file:
      - ./crypto-tracker/.env
    depends_on:
      - redis
    networks:
      - jagcode-network
    restart: unless-stopped

  defi-analyzer:
    build:
      context: ./defi-analyzer
      dockerfile: Dockerfile
    ports:
      - "8002:8002"
    environment:
      - ENVIRONMENT=production
    env_file:
      - ./defi-analyzer/.env
    depends_on:
      - redis
    networks:
      - jagcode-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - jagcode-network
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - jagcode-network
    restart: unless-stopped

volumes:
  redis_data:

networks:
  jagcode-network:
    driver: bridge